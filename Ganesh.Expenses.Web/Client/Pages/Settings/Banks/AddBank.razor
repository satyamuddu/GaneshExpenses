@page "/pages/settings/addbank"
@inject NavigationManager NavigationManager 
@inject HttpClient Http
<h3>Add Bank</h3>

<MudText Typo="Typo.h4" GutterBottom="true">Add New Bank Details</MudText>
<MudTextField @bind-Value="bank.Name" T="string" Label="Account Holder Name" Variant="Variant.Outlined"></MudTextField>
<MudTextField @bind-Value="bank.BankName" T="string" Label="ex : ICICI, HDFC etc" Variant="Variant.Outlined"></MudTextField>

<MudTextField @bind-Value="bank.AccountNumber" T="string" Label="Account Number" Variant="Variant.Outlined"></MudTextField>
<MudTextField @bind-Value="bank.Branch" T="string" Label="Branch Name" Variant="Variant.Outlined"></MudTextField>
<MudTextField @bind-Value="bank.IFSC" T="string" Label="IFSC" Variant="Variant.Outlined"></MudTextField>
<div Class="d-flex justify-space-between align-center">
<MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!allFieldsEntered)" Size="Size.Large" @onclick="@(() => AddAsync())">Save</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!allFieldsEntered)" Link="pages/settings/bankpage" Size="Size.Large">Cancel</MudButton>
</div>



@code {
    public bool allFieldsEntered { get; set; } = true;
        protected Bank bank { get; set; } = new Bank();

        protected async Task AddAsync()
        {
            Ganesh.Expenses.Web.Client.Services.IServiceParameter serviceParameter = new Ganesh.Expenses.Web.Client.Services.ServiceParameter("api/banks");
            Ganesh.Expenses.Web.Client.Services.IExpensesService<Bank> expensesService = new Ganesh.Expenses.Web.Client.Services.ExpensesService<Bank>(Http);
            await expensesService.AddItem(bank, serviceParameter);
            NavigationManager.NavigateTo("pages/settings/bankpage");
        }
}
